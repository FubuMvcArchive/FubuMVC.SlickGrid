<viewdata model="SlickGridHarness.HomeViewModel"/>
<macro name="GridActions" grid="string">
  <div data-grid="!{grid}">
    <button class="btn1">Show Bands, Genre</button>
    <button class="btn2">Show Tour, Location, Time</button>
    <button class="btn3">Show Genre, Location, Time</button>
    <button class="btn4">Show me what all the columns are</button>
    <button class="btn5">Do a template</button>
    <button class="btn6">Find index</button>
    <button class="btn7">Set Active</button>
    <button class="btn8">What are the displayed fields?</button>
  </div>
  <br />
</macro>

<h2>Unfrozen Grid</h2>
!{GridActions("unfrozenConcertsGrid")}
!{this.RenderGrid<UnfrozenConcertsGrid>("unfrozenConcertsGrid").Attr("style", "width:100%;height:300px;")}
  
<hr />
<h2>Frozen Grid</h2>
!{GridActions("frozenConcertsGrid")}
!{this.RenderGrid<FrozenConcertsGrid>("frozenConcertsGrid").Attr("style", "width:100%;height:300px;")}

<pre id="stuff"></pre>

<content:footer>
  <div style="display:none">
    <div data-subject="fake">
      <div>{{name}} is {{age}} years old</div>
    </div>

    <div data-subject="band">
      <i>{{Band}}</i>
    </div>
  </div>
  
  <script type="text/javascript">
    var Demo = {
      gridCustom: function() {
        return {
          columns: {
            Date: {width: 400},
            Band: {width: 300, subject:'band' },
            Location: {width: 300},
            Genre: {displayed: false},
            Tour: {width: 500},
            TourScheduleUrl: {width: 600}
          },
          options: {
            enableColumnReorder: true,
            //autoresize: true
          },
          modify: function(grid, div){
            grid.onDblClick.subscribe(function (e) {
              $("#stuff").html('');
              var cell = grid.getCellFromEvent(e);
              var item = grid.getDataItem(cell.row);
              
              for (prop in item){
                $('<p>' + prop + " = " + item[prop] + '</p>').appendTo('#stuff');
              }
            });
            
            grid.onColumnsReordered.subscribe(function(e){
              $("#stuff").html('');
              alert('reordering');
              
              var columns = grid.getColumns();
              for (var i = 0; i < columns.length; i++){
                alert(columns[i].id);
              }
            });
          }
        };
      }
    };
    var getGrid = function(btn) {
      var grid = $(btn).parent().data('grid');
      return $('#' + grid);
    };
    
    $('.btn1').click(function(){
      getGrid(this).setSlickGridDisplayedColumns(['Band', 'Genre']);
    });

    $('.btn2').click(function(){
      getGrid(this).setSlickGridDisplayedColumns(['Tour', 'Location', 'Date']);
    });

    $('.btn3').click(function(){
      getGrid(this).setSlickGridDisplayedColumns(['Genre', 'Location', 'Date']);
    });
    
    $('.btn4').click(function(){
      var allColumns = getGrid(this).getSlickGridColumns();
      $('#stuff').html(JSON.stringify(allColumns));
    });
    
    $('.btn5').click(function(){
      var text = Slick.Templates.apply('fake', {name:'Jeremy', age:38});
      alert(text);
    });
    
    $('.btn6').click(function(){
      //var search = {Genre:"Texas Country", Band:"Charlie Robison"};
      //alert(getGrid(this).get(0).findRowIndex(search));
      
      alert(getGrid(this).get(0).findColumnIndex("Band"));
    });

    $('.btn7').click(function(){
      var search = {Genre:"Texas Country", Band:"Charlie Robison"};
      getGrid(this).get(0).activateCell(search, 'Location');
    });
    
    $('.btn8').click(function(){
      var fields = getGrid(this).get(0).getDisplayedColumnFields();
      alert(fields);
    });
  </script>
  <script id="unfrozenConcertsGrid-custom" type="text/javascript">
    Demo.gridCustom()
  </script>
  <script id="frozenConcertsGrid-custom" type="text/javascript">
    Demo.gridCustom()
  </script>
</content:footer>